{"code":"(this[\"webpackJsonpsnake-game\"]=this[\"webpackJsonpsnake-game\"]||[]).push([[0],[,,,,,,,,,,function(e,t,n){},function(e,t,n){},,function(e,t,n){},function(e,t,n){\"use strict\";n.r(t);var c=n(1),l=n.n(c),r=n(5),a=n.n(r),o=(n(10),n(2)),i=n(4);n(11);var u=n(0),s=function e(t){Object(i.a)(this,e),this.value=t,this.next=null},v=function e(t){Object(i.a)(this,e);var n=new s(t);this.head=n,this.tail=n},d=\"UP\",j=\"RIGHT\",f=\"DOWN\",h=\"LEFT\",b=200,O=150,w=90,x=function(e){var t=e.length,n=e[0].length,c=Math.round(t/3),l=Math.round(n/3);return{row:c,col:l,cell:e[c][l]}};console.log(\"hello\");var p=function(e){for(var t=1,n=[],c=0;c<e;c++){for(var l=[],r=0;r<e;r++)l.push(t++);n.push(l)}return n},m=function(e,t){return t===d?{row:e.row-1,col:e.col}:t===j?{row:e.row,col:e.col+1}:t===f?{row:e.row+1,col:e.col}:t===h?{row:e.row,col:e.col-1}:void 0},N=function(e,t){var n=e.row,c=e.col;return n<0||c<0||(n>=t.length||c>=t[0].length)},g=function(e){return\"ArrowUp\"===e?d:\"ArrowRight\"===e?j:\"ArrowDown\"===e?f:\"ArrowLeft\"===e?h:\"\"},E=function(e,t){if(null===e.next)return t;var n=e.value,c=n.row,l=n.col,r=e.next.value,a=r.row,o=r.col;return a===c&&o===l+1?j:a===c&&o===l-1?h:o===l&&a===c+1?f:o===l&&a===c-1?d:\"\"},S=function(e,t){var n=E(e,t),c=I(n),l={row:e.value.row,col:e.value.col};return m(l,c)},I=function(e){return e===d?f:e===j?h:e===f?d:e===h?j:void 0},T=function(e,t,n,c){var l=\"cell\";return e===t&&(l=n?\"cell cell-purple\":\"cell cell-red\"),c.has(e)&&(l=\"cell cell-green\"),l},R=function(){console.log(\"inside Board\");var e=Object(c.useState)(0),t=Object(o.a)(e,2),n=t[0],l=t[1],r=Object(c.useState)(p(15)),a=Object(o.a)(r,2),i=a[0],d=(a[1],Object(c.useState)(new v(x(i)))),f=Object(o.a)(d,2),h=f[0],R=f[1],A=Object(c.useState)(new Set([h.head.value.cell])),M=Object(o.a)(A,2),k=M[0],y=M[1],B=Object(c.useState)(b),D=Object(o.a)(B,2),P=D[0],C=D[1],G=Object(c.useState)(h.head.value.cell+5),L=Object(o.a)(G,2),F=L[0],J=L[1],U=Object(c.useState)(j),z=Object(o.a)(U,2),H=z[0],W=z[1],q=Object(c.useState)(!1),K=Object(o.a)(q,2),Q=K[0],V=K[1];Object(c.useEffect)((function(){window.addEventListener(\"keydown\",(function(e){X(e)}))}),[]),function(e,t){var n=Object(c.useRef)();Object(c.useEffect)((function(){n.current=e}),[e]),Object(c.useEffect)((function(){if(null!==t){var e=setInterval((function(){n.current()}),t);return function(){return clearInterval(e)}}}),[t])}((function(){Y()}),P);var X=function(e){var t=g(e.key);\"\"!==t&&(I(t)===H&&k.size>1||W(t))},Y=function(){var e={row:h.head.value.row,col:h.head.value.col},t=m(e,H);if(N(t,i))ee();else{var n=i[t.row][t.col];if(k.has(n))ee();else{var c=new s({row:t.row,col:t.col,cell:n}),l=h.head;h.head=c,l.next=c;var r=new Set(k);r.delete(h.tail.value.cell),r.add(n),h.tail=h.tail.next,null===h.tail&&(h.tail=h.head),n===F&&(Z(r),Q&&$(),_(r)),y(r)}}},Z=function(e){var t=S(h.tail,H);if(!N(t,i)){var n=i[t.row][t.col],c=new s({row:t.row,col:t.col,cell:n}),l=h.tail;h.tail=c,h.tail.next=l,e.add(n)}},$=function(){var e=E(h.tail,H),t=I(e);W(t),function(e){for(var t=null,n=e;null!==n;){var c=n.next;n.next=t,t=n,n=c}}(h.tail);var n=h.head;h.head=h.tail,h.tail=n},_=function(e){for(var t,c,r;c=1,r=225,t=Math.floor(Math.random()*(r-c+1)+c),e.has(t)||F===t;);var a=Math.random()<.2;J(t),V(a),l(n+1)},ee=function(){l(0);var e=x(i);R(new v(e)),J(e.cell+5),y(new Set([e.cell])),W(j)};return Object(u.jsxs)(u.Fragment,{children:[Object(u.jsxs)(\"div\",{children:[Object(u.jsx)(\"h3\",{style:{float:\"top\"},children:\"Choose level :\"}),Object(u.jsx)(\"div\",{style:{float:\"center\"},children:Object(u.jsxs)(\"select\",{className:\"level\",onChange:function(e){return function(e){var t=e.target.value;C(\"BEGINNER\"===t?b:\"INTERMEDIATE\"===t?O:w)}(e)},disabled:!1,children:[Object(u.jsx)(\"option\",{className:\"value\",value:\"BEGINNER\",children:\"Beginner\"}),Object(u.jsx)(\"option\",{className:\"value\",value:\"INTERMEDIATE\",children:\"Intermediate\"}),Object(u.jsx)(\"option\",{className:\"value\",value:\"PRO\",children:\"Pro\"})]})})]}),Object(u.jsxs)(\"div\",{style:{paddingTop:\"10px\"},children:[Object(u.jsx)(\"button\",{className:\"start\",children:\"START\"}),Object(u.jsx)(\"button\",{className:\"stop\",onClick:function(){return ee()},children:\"STOP\"})]}),Object(u.jsxs)(\"h2\",{children:[\"Score: \",n]}),Object(u.jsx)(\"div\",{className:\"board\",children:i.map((function(e,t){return Object(u.jsx)(\"div\",{className:\"row\",children:e.map((function(e,t){var n=T(e,F,Q,k);return Object(u.jsx)(\"div\",{className:n},t)}))},t)}))})]})},A=(n(13),function(){return Object(u.jsx)(\"div\",{className:\"App\",children:Object(u.jsx)(R,{})})});a.a.render(Object(u.jsx)(l.a.StrictMode,{children:Object(u.jsx)(A,{})}),document.getElementById(\"root\"))}],[[14,1,2]]]);","name":"static/js/main.55d5cd0c.chunk.js","map":{"version":3,"sources":["static/js/main.55d5cd0c.chunk.js"],"names":["this","push","module","exports","__webpack_require__","__webpack_exports__","r","react","react_default","n","react_dom","react_dom_default","slicedToArray","classCallCheck","jsx_runtime","Board_LinkedListNode","LinkedListNode","value","Object","next","Board_LinkedList","LinkedList","node","head","tail","Direction","Speed","getStartingSnakeLLValue","board","rowSize","length","colSize","startingRow","Math","round","startingCol","row","col","cell","console","log","createBoard","BOARD_SIZE","counter","currentRow","getCoordsInDirection","coords","direction","isOutOfBounds","getDirectionFromKey","key","getNextNodeDirection","currentDirection","_node$value","currentCol","_node$next$value","nextRow","nextCol","getGrowthNodeCoords","snakeTail","tailNextNodeDirection","growthDirection","getOppositeDirection","currentTailCoords","getCellClassName","cellValue","foodCell","foodShouldReverseDirection","snakeCells","className","has","src_Board_Board","_useState","_useState2","score","setScore","_useState3","_useState4","_useState5","_useState6","snake","setSnake","_useState7","Set","_useState8","setSnakeCells","_useState9","_useState10","speed","setSpeed","_useState11","_useState12","setFoodCell","_useState13","_useState14","setDirection","_useState15","_useState16","setFoodShouldReverseDirection","window","addEventListener","e","handleKeydown","callback","delay","savedCallback","current","id","setInterval","clearInterval","useInterval","moveSnake","newDirection","size","currentHeadCoords","nextHeadCoords","handleGameOver","nextHeadCell","newHead","currentHead","newSnakeCells","delete","add","growSnake","reverseSnake","handleFoodConsumption","growthNodeCoords","newTailCell","newTail","currentTail","previousNode","currentNode","nextNode","reverseLinkedList","snakeHead","nextFoodCell","min","max","floor","random","nextFoodShouldReverseDirection","snakeLLStartingValue","children","style","float","onChange","target","handleChange","disabled","paddingTop","onClick","map","rowIdx","cellIdx","src_App_0","a","render","StrictMode","document","getElementById"],"mappings":"CAACA,KAAK,0BAA4BA,KAAK,2BAA6B,IAAIC,KAAK,CAAC,CAAC,GAAG,CAC3E,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAED,SAAUC,EAAQC,EAASC,KAM3B,SAAUF,EAAQC,EAASC,KAKzB,CAEF,SAAUF,EAAQC,EAASC,KAM3B,SAAUF,EAAQG,EAAqBD,GAE7C,aAEAA,EAAoBE,EAAED,GAGtB,IAAIE,EAAQH,EAAoB,GAC5BI,EAA6BJ,EAAoBK,EAAEF,GAGnDG,EAAYN,EAAoB,GAChCO,EAAiCP,EAAoBK,EAAEC,GAMvDE,GAHMR,EAAoB,IAGVA,EAAoB,IAGpCS,EAAiBT,EAAoB,GAUvBA,EAAoB,IAAtC,IAGIU,EAAcV,EAAoB,GAQ/BW,EAAqB,SAASC,EAAeC,GAAOC,OAAOL,EAAgC,EAAvCK,CAA0ClB,KAAKgB,GAAgBhB,KAAKiB,MAAMA,EAAMjB,KAAKmB,KAAK,MAAWC,EAAiB,SAASC,EAAWJ,GAAOC,OAAOL,EAAgC,EAAvCK,CAA0ClB,KAAKqB,GAAY,IAAIC,EAAK,IAAIP,EAAqBE,GAAOjB,KAAKuB,KAAKD,EAAKtB,KAAKwB,KAAKF,GAAWG,EAAc,KAAdA,EAAyB,QAAzBA,EAAsC,OAAtCA,EAAkD,OAAYC,EAAgB,IAAhBA,EAAiC,IAAjCA,EAAyC,GAAyEC,EAAwB,SAAiCC,GAAO,IAAIC,EAAQD,EAAME,OAAWC,EAAQH,EAAM,GAAGE,OAAWE,EAAYC,KAAKC,MAAML,EAAQ,GAAOM,EAAYF,KAAKC,MAAMH,EAAQ,GAAoD,MAAM,CAACK,IAAIJ,EAAYK,IAAIF,EAAYG,KAAvEV,EAAMI,GAAaG,KAAyEI,QAAQC,IAAI,SAAS,IAiB2jDC,EAAY,SAAqBC,GAAuC,IAA3B,IAAIC,EAAQ,EAAMf,EAAM,GAAWQ,EAAI,EAAEA,EAAIM,EAAWN,IAAM,CAAmB,IAAlB,IAAIQ,EAAW,GAAWP,EAAI,EAAEA,EAAIK,EAAWL,IAAOO,EAAW3C,KAAK0C,KAAYf,EAAM3B,KAAK2C,GAAa,OAAOhB,GAAYiB,EAAqB,SAA8BC,EAAOC,GAAW,OAAGA,IAAYtB,EAAoB,CAACW,IAAIU,EAAOV,IAAI,EAAEC,IAAIS,EAAOT,KAASU,IAAYtB,EAAuB,CAACW,IAAIU,EAAOV,IAAIC,IAAIS,EAAOT,IAAI,GAAOU,IAAYtB,EAAsB,CAACW,IAAIU,EAAOV,IAAI,EAAEC,IAAIS,EAAOT,KAASU,IAAYtB,EAAsB,CAACW,IAAIU,EAAOV,IAAIC,IAAIS,EAAOT,IAAI,QAApE,GAA8EW,EAAc,SAAuBF,EAAOlB,GAAO,IAAIQ,EAAIU,EAAOV,IAAIC,EAAIS,EAAOT,IAAI,OAAGD,EAAI,GAAGC,EAAI,IAAiBD,GAAKR,EAAME,QAAQO,GAAKT,EAAM,GAAGE,SAAsCmB,EAAoB,SAA6BC,GAAK,MAAS,YAANA,EAAuBzB,EAAsB,eAANyB,EAA0BzB,EAAyB,cAANyB,EAAyBzB,EAAwB,cAANyB,EAAyBzB,EAAqB,IAAS0B,EAAqB,SAA8B7B,EAAK8B,GAAkB,GAAe,OAAZ9B,EAAKH,KAAY,OAAOiC,EAAiB,IAAIC,EAAY/B,EAAKL,MAAM2B,EAAWS,EAAYjB,IAAIkB,EAAWD,EAAYhB,IAAQkB,EAAiBjC,EAAKH,KAAKF,MAAMuC,EAAQD,EAAiBnB,IAAIqB,EAAQF,EAAiBlB,IAAI,OAAGmB,IAAUZ,GAAYa,IAAUH,EAAW,EAAU7B,EAAoB+B,IAAUZ,GAAYa,IAAUH,EAAW,EAAU7B,EAAmBgC,IAAUH,GAAYE,IAAUZ,EAAW,EAAUnB,EAAmBgC,IAAUH,GAAYE,IAAUZ,EAAW,EAAUnB,EAAoB,IAASiC,EAAoB,SAA6BC,EAAUP,GAAkB,IAAIQ,EAAsBT,EAAqBQ,EAAUP,GAAsBS,EAAgBC,EAAqBF,GAA2BG,EAAkB,CAAC3B,IAAIuB,EAAU1C,MAAMmB,IAAIC,IAAIsB,EAAU1C,MAAMoB,KAAkF,OAAxDQ,EAAqBkB,EAAkBF,IAA+CC,EAAqB,SAA8Bf,GAAW,OAAGA,IAAYtB,EAAoBA,EAAkBsB,IAAYtB,EAAuBA,EAAkBsB,IAAYtB,EAAsBA,EAAgBsB,IAAYtB,EAAsBA,OAArC,GAA2DuC,EAAiB,SAA0BC,EAAUC,EAASC,EAA2BC,GAAY,IAAIC,EAAU,OAAuL,OAA7KJ,IAAYC,IAAyCG,EAA5BF,EAAsC,mBAAmC,iBAAqBC,EAAWE,IAAIL,KAAWI,EAAU,mBAAyBA,GAA6CE,EAjBjnI,WAAiBhC,QAAQC,IAAI,gBAAgB,IAAIgC,EAAUtD,OAAOX,EAAgB,SAAvBW,CAA0B,GAAGuD,EAAWvD,OAAON,EAA+B,EAAtCM,CAAyCsD,EAAU,GAAGE,EAAMD,EAAW,GAAGE,EAASF,EAAW,GAAOG,EAAW1D,OAAOX,EAAgB,SAAvBW,CAA0BuB,EAA5nB,KAAqpBoC,EAAW3D,OAAON,EAA+B,EAAtCM,CAAyC0D,EAAW,GAAGhD,EAAMiD,EAAW,GAA8BC,GAAlBD,EAAW,GAAkB3D,OAAOX,EAAgB,SAAvBW,CAA0B,IAAIE,EAAiBO,EAAwBC,MAASmD,EAAW7D,OAAON,EAA+B,EAAtCM,CAAyC4D,EAAW,GAAGE,EAAMD,EAAW,GAAGE,EAASF,EAAW,GAAOG,EAAWhE,OAAOX,EAAgB,SAAvBW,CAA0B,IAAIiE,IAAI,CAACH,EAAMzD,KAAKN,MAAMqB,QAAQ8C,EAAWlE,OAAON,EAA+B,EAAtCM,CAAyCgE,EAAW,GAAGd,EAAWgB,EAAW,GAAGC,EAAcD,EAAW,GAAOE,EAAWpE,OAAOX,EAAgB,SAAvBW,CAA0BQ,GAAgB6D,EAAYrE,OAAON,EAA+B,EAAtCM,CAAyCoE,EAAW,GAAGE,EAAMD,EAAY,GAAGE,EAASF,EAAY,GAChwDG,EAAYxE,OAAOX,EAAgB,SAAvBW,CAA0B8D,EAAMzD,KAAKN,MAAMqB,KAAK,GAAGqD,EAAYzE,OAAON,EAA+B,EAAtCM,CAAyCwE,EAAY,GAAGxB,EAASyB,EAAY,GAAGC,EAAYD,EAAY,GAAOE,EAAY3E,OAAOX,EAAgB,SAAvBW,CAA0BO,GAAiBqE,EAAY5E,OAAON,EAA+B,EAAtCM,CAAyC2E,EAAY,GAAG9C,EAAU+C,EAAY,GAAGC,EAAaD,EAAY,GAAOE,EAAY9E,OAAOX,EAAgB,SAAvBW,EAA0B,GAAO+E,EAAY/E,OAAON,EAA+B,EAAtCM,CAAyC8E,EAAY,GAAG7B,EAA2B8B,EAAY,GAAGC,EAA8BD,EAAY,GAAG/E,OAAOX,EAAiB,UAAxBW,EAA2B,WAAWiF,OAAOC,iBAAiB,WAAU,SAASC,GAAGC,EAAcD,QAAQ,IAhBpqB,SAAqBE,EAASC,GAAO,IAAIC,EAAcvF,OAAOX,EAAc,OAArBW,GACvDA,OAAOX,EAAiB,UAAxBW,EAA2B,WAAWuF,EAAcC,QAAQH,IAAW,CAACA,IACxErF,OAAOX,EAAiB,UAAxBW,EAA2B,WAAoD,GAAW,OAARsF,EAAa,CAAC,IAAIG,EAAGC,aAAjE,WAAgBH,EAAcC,YAAoDF,GAAO,OAAO,WAAW,OAAOK,cAAcF,OAAS,CAACH,IAcwfM,EAAY,WAAWC,MAAcvB,GAG7sB,IAAIc,EAAc,SAAuBD,GAAG,IAAIW,EAAa/D,EAAoBoD,EAAEnD,KAAyC,KAAf8D,IAAyElD,EAAqBkD,KAAgBjE,GAAWqB,EAAW6C,KAAK,GAIrNlB,EAAaiB,KAAoBD,EAAU,WAAqB,IAAIG,EAAkB,CAAC9E,IAAI4C,EAAMzD,KAAKN,MAAMmB,IAAIC,IAAI2C,EAAMzD,KAAKN,MAAMoB,KAAS8E,EAAetE,EAAqBqE,EAAkBnE,GAAW,GAAGC,EAAcmE,EAAevF,GAAQwF,SAAxC,CAAiE,IAAIC,EAAazF,EAAMuF,EAAe/E,KAAK+E,EAAe9E,KAAK,GAAG+B,EAAWE,IAAI+C,GAAeD,SAAjC,CAA0D,IAAIE,EAAQ,IAAIvG,EAAqB,CAACqB,IAAI+E,EAAe/E,IAAIC,IAAI8E,EAAe9E,IAAIC,KAAK+E,IAAmBE,EAAYvC,EAAMzD,KAAKyD,EAAMzD,KAAK+F,EAAQC,EAAYpG,KAAKmG,EAAQ,IAAIE,EAAc,IAAIrC,IAAIf,GAAYoD,EAAcC,OAAOzC,EAAMxD,KAAKP,MAAMqB,MAAMkF,EAAcE,IAAIL,GAAcrC,EAAMxD,KAAKwD,EAAMxD,KAAKL,KAAqB,OAAb6D,EAAMxD,OAAYwD,EAAMxD,KAAKwD,EAAMzD,MAAsB8F,IAAenD,IACjzByD,EAAUH,GAAkBrD,GAA2ByD,IAAeC,EAAsBL,IAAgBnC,EAAcmC,MACtHG,EAAU,SAAmBH,GAAe,IAAIM,EAAiBpE,EAAoBsB,EAAMxD,KAAKuB,GAAW,IAAGC,EAAc8E,EAAiBlG,GAAlC,CACvG,IAAImG,EAAYnG,EAAMkG,EAAiB1F,KAAK0F,EAAiBzF,KAAS2F,EAAQ,IAAIjH,EAAqB,CAACqB,IAAI0F,EAAiB1F,IAAIC,IAAIyF,EAAiBzF,IAAIC,KAAKyF,IAAkBE,EAAYjD,EAAMxD,KAAKwD,EAAMxD,KAAKwG,EAAQhD,EAAMxD,KAAKL,KAAK8G,EAAYT,EAAcE,IAAIK,KAAmBH,EAAa,WAAwB,IAAIhE,EAAsBT,EAAqB6B,EAAMxD,KAAKuB,GAAeiE,EAAalD,EAAqBF,GAAuBmC,EAAaiB,GAxB/R,SAA2BzF,GAAiD,IAA3C,IAAI2G,EAAa,KAASC,EAAY5G,EAAyB,OAAd4G,GAAmB,CAAC,IAAIC,EAASD,EAAYhH,KAAKgH,EAAYhH,KAAK+G,EAAaA,EAAaC,EAAYA,EAAYC,GA0BhYC,CAAkBrD,EAAMxD,MAAM,IAAI8G,EAAUtD,EAAMzD,KAAKyD,EAAMzD,KAAKyD,EAAMxD,KAAKwD,EAAMxD,KAAK8G,GAAgBT,EAAsB,SAA+BL,GAI7J,IAJ4K,IAAmDe,EA9BhMC,EAAIC,EAAJD,EAkCgB,EAlCZC,EA8BkK/F,IAIzL6F,EAjCLtG,KAAKyG,MAAMzG,KAAK0G,UAAUF,EAAID,EAAI,GAAGA,GAiC8BhB,EAAclD,IAAIiE,IAAerE,IAAWqE,IAA6B,IAAIK,EAA+B3G,KAAK0G,SAjBiU,GAiBjR/C,EAAY2C,GAAcrC,EAA8B0C,GAAgCjE,EAASD,EAAM,IAAS0C,GAAe,WAA0BzC,EAAS,GAAG,IAAIkE,EAAqBlH,EAAwBC,GAAOqD,EAAS,IAAI7D,EAAiByH,IAAuBjD,EAAYiD,EAAqBvG,KAAK,GAAG+C,EAAc,IAAIF,IAAI,CAAC0D,EAAqBvG,QAAQyD,EAAatE,IAAiO,OAAmBP,OAAOJ,EAAkB,KAAzBI,CAA4BJ,EAAsB,SAAE,CAACgI,SAAS,CAAc5H,OAAOJ,EAAkB,KAAzBI,CAA4B,MAAM,CAAC4H,SAAS,CAAc5H,OAAOJ,EAAiB,IAAxBI,CAA2B,KAAK,CAAC6H,MAAM,CAACC,MAAM,OAAOF,SAAS,mBAAgC5H,OAAOJ,EAAiB,IAAxBI,CAA2B,MAAM,CAAC6H,MAAM,CAACC,MAAM,UAAUF,SAAsB5H,OAAOJ,EAAkB,KAAzBI,CAA4B,SAAS,CAACmD,UAAU,QAAQ4E,SAAS,SAAkB5C,GAAG,OAAzlB,SAAsBA,GAAG,IAAIpF,EAAMoF,EAAE6C,OAAOjI,MAA6BwE,EAAZ,aAARxE,EAA6BS,EAAiC,iBAART,EAAiCS,EAAmCA,GAAibyH,CAAa9C,IAAK+C,UAAS,EAAMN,SAAS,CAAc5H,OAAOJ,EAAiB,IAAxBI,CAA2B,SAAS,CAACmD,UAAU,QAAQpD,MAAM,WAAW6H,SAAS,aAA0B5H,OAAOJ,EAAiB,IAAxBI,CAA2B,SAAS,CAACmD,UAAU,QAAQpD,MAAM,eAAe6H,SAAS,iBAA8B5H,OAAOJ,EAAiB,IAAxBI,CAA2B,SAAS,CAACmD,UAAU,QAAQpD,MAAM,MAAM6H,SAAS,gBAA6B5H,OAAOJ,EAAkB,KAAzBI,CAA4B,MAAM,CAAC6H,MAAM,CAACM,WAAW,QAAQP,SAAS,CAAc5H,OAAOJ,EAAiB,IAAxBI,CAA2B,SAAS,CAACmD,UAAU,QAAQyE,SAAS,UAAuB5H,OAAOJ,EAAiB,IAAxBI,CAA2B,SAAS,CAACmD,UAAU,OAAOiF,QAAQ,WAAmB,OAAOlC,MAAmB0B,SAAS,YAAyB5H,OAAOJ,EAAkB,KAAzBI,CAA4B,KAAK,CAAC4H,SAAS,CAAC,UAAUpE,KAAsBxD,OAAOJ,EAAiB,IAAxBI,CAA2B,MAAM,CAACmD,UAAU,QAAQyE,SAASlH,EAAM2H,KAAI,SAASnH,EAAIoH,GAAQ,OAAmBtI,OAAOJ,EAAiB,IAAxBI,CAA2B,MAAM,CAACmD,UAAU,MAAMyE,SAAS1G,EAAImH,KAAI,SAAStF,EAAUwF,GAAS,IAAIpF,EAAUL,EAAiBC,EAAUC,EAASC,EAA2BC,GAAY,OAAmBlD,OAAOJ,EAAiB,IAAxBI,CAA2B,MAAM,CAACmD,UAAUA,GAAWoF,OAAaD,YAKlqEE,GAH5LtJ,EAAoB,IAGtB,WAAe,OAAmBc,OAAOJ,EAAiB,IAAxBI,CAA2B,MAAM,CAACmD,UAAU,MAAMyE,SAAsB5H,OAAOJ,EAAiB,IAAxBI,CAA2BqD,EAAgB,QAEjK5D,EAAkBgJ,EAAEC,OAAoB1I,OAAOJ,EAAiB,IAAxBI,CAA2BV,EAAcmJ,EAAEE,WAAW,CAACf,SAAsB5H,OAAOJ,EAAiB,IAAxBI,CAA2BwI,EAAU,MAAMI,SAASC,eAAe,WAGtL,CAAC,CAAC,GAAG,EAAE"},"input":"(this[\"webpackJsonpsnake-game\"] = this[\"webpackJsonpsnake-game\"] || []).push([[0],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n/* 12 */,\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(1);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(5);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./src/index.css\nvar src = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 5 modules\nvar slicedToArray = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/lib/utils.js\n// Copied from https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min,max){// min and max included\nreturn Math.floor(Math.random()*(max-min+1)+min);}// Copied from https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nfunction useInterval(callback,delay){var savedCallback=Object(react[\"useRef\"])();// Remember the latest callback.\nObject(react[\"useEffect\"])(function(){savedCallback.current=callback;},[callback]);// Set up the interval.\nObject(react[\"useEffect\"])(function(){function tick(){savedCallback.current();}if(delay!==null){var id=setInterval(tick,delay);return function(){return clearInterval(id);};}},[delay]);}function reverseLinkedList(head){var previousNode=null;var currentNode=head;while(currentNode!==null){var nextNode=currentNode.next;currentNode.next=previousNode;previousNode=currentNode;currentNode=nextNode;}return previousNode;}\n// EXTERNAL MODULE: ./src/Board/Board.css\nvar Board_Board = __webpack_require__(11);\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/Board/Board.jsx\n/**\n * TODO: add a more elegant UX for before a game starts and after a game ends.\n * A game probably shouldn't start until the user presses an arrow key, and\n * once a game is over, the board state should likely freeze until the user\n * intentionally restarts the game.\n */var Board_LinkedListNode=function LinkedListNode(value){Object(classCallCheck[\"a\" /* default */])(this,LinkedListNode);this.value=value;this.next=null;};var Board_LinkedList=function LinkedList(value){Object(classCallCheck[\"a\" /* default */])(this,LinkedList);var node=new Board_LinkedListNode(value);this.head=node;this.tail=node;};var Direction={UP:'UP',RIGHT:'RIGHT',DOWN:'DOWN',LEFT:'LEFT'};var Speed={BEGINNER:200,INTERMEDIATE:150,PRO:90};var BOARD_SIZE=15;var PROBABILITY_OF_DIRECTION_REVERSAL_FOOD=0.2;var getStartingSnakeLLValue=function getStartingSnakeLLValue(board){var rowSize=board.length;var colSize=board[0].length;var startingRow=Math.round(rowSize/3);var startingCol=Math.round(colSize/3);var startingCell=board[startingRow][startingCol];return{row:startingRow,col:startingCol,cell:startingCell};};console.log(\"hello\");var Board_Board_Board=function Board(){console.log(\"inside Board\");var _useState=Object(react[\"useState\"])(0),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),score=_useState2[0],setScore=_useState2[1];var _useState3=Object(react[\"useState\"])(createBoard(BOARD_SIZE)),_useState4=Object(slicedToArray[\"a\" /* default */])(_useState3,2),board=_useState4[0],setBoard=_useState4[1];var _useState5=Object(react[\"useState\"])(new Board_LinkedList(getStartingSnakeLLValue(board))),_useState6=Object(slicedToArray[\"a\" /* default */])(_useState5,2),snake=_useState6[0],setSnake=_useState6[1];var _useState7=Object(react[\"useState\"])(new Set([snake.head.value.cell])),_useState8=Object(slicedToArray[\"a\" /* default */])(_useState7,2),snakeCells=_useState8[0],setSnakeCells=_useState8[1];var _useState9=Object(react[\"useState\"])(Speed.BEGINNER),_useState10=Object(slicedToArray[\"a\" /* default */])(_useState9,2),speed=_useState10[0],setSpeed=_useState10[1];// Naively set the starting food cell 5 cells away from the starting snake cell.\nvar _useState11=Object(react[\"useState\"])(snake.head.value.cell+5),_useState12=Object(slicedToArray[\"a\" /* default */])(_useState11,2),foodCell=_useState12[0],setFoodCell=_useState12[1];var _useState13=Object(react[\"useState\"])(Direction.RIGHT),_useState14=Object(slicedToArray[\"a\" /* default */])(_useState13,2),direction=_useState14[0],setDirection=_useState14[1];var _useState15=Object(react[\"useState\"])(false),_useState16=Object(slicedToArray[\"a\" /* default */])(_useState15,2),foodShouldReverseDirection=_useState16[0],setFoodShouldReverseDirection=_useState16[1];Object(react[\"useEffect\"])(function(){window.addEventListener('keydown',function(e){handleKeydown(e);});},[]);useInterval(function(){moveSnake();},speed);// `useInterval` is needed; you can't naively do `setInterval` in the\n// `useEffect` above. See the article linked above the `useInterval`\n// definition for details.\nvar handleKeydown=function handleKeydown(e){var newDirection=getDirectionFromKey(e.key);var isValidDirection=newDirection!=='';if(!isValidDirection)return;var snakeWillRunIntoItself=getOppositeDirection(newDirection)===direction&&snakeCells.size>1;// Note: this functionality is currently broken, for the same reason that\n// `useInterval` is needed. Specifically, the `direction` and `snakeCells`\n// will currently never reflect their \"latest version\" when `handleKeydown`\n// is called. I leave it as an exercise to the viewer to fix this :P\nif(snakeWillRunIntoItself)return;setDirection(newDirection);};var moveSnake=function moveSnake(){var currentHeadCoords={row:snake.head.value.row,col:snake.head.value.col};var nextHeadCoords=getCoordsInDirection(currentHeadCoords,direction);if(isOutOfBounds(nextHeadCoords,board)){handleGameOver();return;}var nextHeadCell=board[nextHeadCoords.row][nextHeadCoords.col];if(snakeCells.has(nextHeadCell)){handleGameOver();return;}var newHead=new Board_LinkedListNode({row:nextHeadCoords.row,col:nextHeadCoords.col,cell:nextHeadCell});var currentHead=snake.head;snake.head=newHead;currentHead.next=newHead;var newSnakeCells=new Set(snakeCells);newSnakeCells.delete(snake.tail.value.cell);newSnakeCells.add(nextHeadCell);snake.tail=snake.tail.next;if(snake.tail===null)snake.tail=snake.head;var foodConsumed=nextHeadCell===foodCell;if(foodConsumed){// This function mutates newSnakeCells.\ngrowSnake(newSnakeCells);if(foodShouldReverseDirection)reverseSnake();handleFoodConsumption(newSnakeCells);}setSnakeCells(newSnakeCells);};// This function mutates newSnakeCells.\nvar growSnake=function growSnake(newSnakeCells){var growthNodeCoords=getGrowthNodeCoords(snake.tail,direction);if(isOutOfBounds(growthNodeCoords,board)){// Snake is positioned such that it can't grow; don't do anything.\nreturn;}var newTailCell=board[growthNodeCoords.row][growthNodeCoords.col];var newTail=new Board_LinkedListNode({row:growthNodeCoords.row,col:growthNodeCoords.col,cell:newTailCell});var currentTail=snake.tail;snake.tail=newTail;snake.tail.next=currentTail;newSnakeCells.add(newTailCell);};var reverseSnake=function reverseSnake(){var tailNextNodeDirection=getNextNodeDirection(snake.tail,direction);var newDirection=getOppositeDirection(tailNextNodeDirection);setDirection(newDirection);// The tail of the snake is really the head of the linked list, which\n// is why we have to pass the snake's tail to `reverseLinkedList`.\nreverseLinkedList(snake.tail);var snakeHead=snake.head;snake.head=snake.tail;snake.tail=snakeHead;};var handleFoodConsumption=function handleFoodConsumption(newSnakeCells){var maxPossibleCellValue=BOARD_SIZE*BOARD_SIZE;var nextFoodCell;// In practice, this will never be a time-consuming operation. Even\n// in the extreme scenario where a snake is so big that it takes up 90%\n// of the board (nearly impossible), there would be a 10% chance of generating\n// a valid new food cell--so an average of 10 operations: trivial.\nwhile(true){nextFoodCell=randomIntFromInterval(1,maxPossibleCellValue);if(newSnakeCells.has(nextFoodCell)||foodCell===nextFoodCell)continue;break;}var nextFoodShouldReverseDirection=Math.random()<PROBABILITY_OF_DIRECTION_REVERSAL_FOOD;setFoodCell(nextFoodCell);setFoodShouldReverseDirection(nextFoodShouldReverseDirection);setScore(score+1);};var handleGameOver=function handleGameOver(){setScore(0);var snakeLLStartingValue=getStartingSnakeLLValue(board);setSnake(new Board_LinkedList(snakeLLStartingValue));setFoodCell(snakeLLStartingValue.cell+5);setSnakeCells(new Set([snakeLLStartingValue.cell]));setDirection(Direction.RIGHT);};var handleChange=function handleChange(e){var value=e.target.value;if(value===\"BEGINNER\"){setSpeed(Speed.BEGINNER);}else if(value===\"INTERMEDIATE\"){setSpeed(Speed.INTERMEDIATE);}else{setSpeed(Speed.PRO);}};return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(jsx_runtime[\"Fragment\"],{children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h3\",{style:{float:\"top\"},children:\"Choose level :\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{style:{float:\"center\"},children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"select\",{className:\"level\",onChange:function onChange(e){return handleChange(e);},disabled:false,children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"option\",{className:\"value\",value:\"BEGINNER\",children:\"Beginner\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"option\",{className:\"value\",value:\"INTERMEDIATE\",children:\"Intermediate\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"option\",{className:\"value\",value:\"PRO\",children:\"Pro\"})]})})]}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{style:{paddingTop:\"10px\"},children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",{className:\"start\",children:\"START\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",{className:\"stop\",onClick:function onClick(){return handleGameOver();},children:\"STOP\"})]}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"h2\",{children:[\"Score: \",score]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"board\",children:board.map(function(row,rowIdx){return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"row\",children:row.map(function(cellValue,cellIdx){var className=getCellClassName(cellValue,foodCell,foodShouldReverseDirection,snakeCells);return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:className},cellIdx);})},rowIdx);})})]});};var createBoard=function createBoard(BOARD_SIZE){var counter=1;var board=[];for(var row=0;row<BOARD_SIZE;row++){var currentRow=[];for(var col=0;col<BOARD_SIZE;col++){currentRow.push(counter++);}board.push(currentRow);}return board;};var getCoordsInDirection=function getCoordsInDirection(coords,direction){if(direction===Direction.UP){return{row:coords.row-1,col:coords.col};}if(direction===Direction.RIGHT){return{row:coords.row,col:coords.col+1};}if(direction===Direction.DOWN){return{row:coords.row+1,col:coords.col};}if(direction===Direction.LEFT){return{row:coords.row,col:coords.col-1};}};var isOutOfBounds=function isOutOfBounds(coords,board){var row=coords.row,col=coords.col;if(row<0||col<0)return true;if(row>=board.length||col>=board[0].length)return true;return false;};var getDirectionFromKey=function getDirectionFromKey(key){if(key==='ArrowUp')return Direction.UP;if(key==='ArrowRight')return Direction.RIGHT;if(key==='ArrowDown')return Direction.DOWN;if(key==='ArrowLeft')return Direction.LEFT;return'';};var getNextNodeDirection=function getNextNodeDirection(node,currentDirection){if(node.next===null)return currentDirection;var _node$value=node.value,currentRow=_node$value.row,currentCol=_node$value.col;var _node$next$value=node.next.value,nextRow=_node$next$value.row,nextCol=_node$next$value.col;if(nextRow===currentRow&&nextCol===currentCol+1){return Direction.RIGHT;}if(nextRow===currentRow&&nextCol===currentCol-1){return Direction.LEFT;}if(nextCol===currentCol&&nextRow===currentRow+1){return Direction.DOWN;}if(nextCol===currentCol&&nextRow===currentRow-1){return Direction.UP;}return'';};var getGrowthNodeCoords=function getGrowthNodeCoords(snakeTail,currentDirection){var tailNextNodeDirection=getNextNodeDirection(snakeTail,currentDirection);var growthDirection=getOppositeDirection(tailNextNodeDirection);var currentTailCoords={row:snakeTail.value.row,col:snakeTail.value.col};var growthNodeCoords=getCoordsInDirection(currentTailCoords,growthDirection);return growthNodeCoords;};var getOppositeDirection=function getOppositeDirection(direction){if(direction===Direction.UP)return Direction.DOWN;if(direction===Direction.RIGHT)return Direction.LEFT;if(direction===Direction.DOWN)return Direction.UP;if(direction===Direction.LEFT)return Direction.RIGHT;};var getCellClassName=function getCellClassName(cellValue,foodCell,foodShouldReverseDirection,snakeCells){var className='cell';if(cellValue===foodCell){if(foodShouldReverseDirection){className='cell cell-purple';}else{className='cell cell-red';}}if(snakeCells.has(cellValue))className='cell cell-green';return className;};/* harmony default export */ var src_Board_Board = (Board_Board_Board);\n// EXTERNAL MODULE: ./src/App.css\nvar src_App = __webpack_require__(13);\n\n// CONCATENATED MODULE: ./src/App.js\nvar App_App=function App(){return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"App\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(src_Board_Board,{})});};/* harmony default export */ var src_App_0 = (App_App);\n// CONCATENATED MODULE: ./src/index.js\nreact_dom_default.a.render(/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(react_default.a.StrictMode,{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(src_App_0,{})}),document.getElementById('root'));\n\n/***/ })\n],[[14,1,2]]]);","inputSourceMap":{"version":3,"sources":["/home/ayaz/career_projects/SnakeGame/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-4-0!/home/ayaz/career_projects/SnakeGame/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!/home/ayaz/career_projects/SnakeGame/node_modules/postcss-loader/src/index.js??postcss!/home/ayaz/career_projects/SnakeGame/src/index.css","/home/ayaz/career_projects/SnakeGame/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-4-0!/home/ayaz/career_projects/SnakeGame/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!/home/ayaz/career_projects/SnakeGame/node_modules/postcss-loader/src/index.js??postcss!/home/ayaz/career_projects/SnakeGame/src/Board/Board.css","/home/ayaz/career_projects/SnakeGame/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-4-0!/home/ayaz/career_projects/SnakeGame/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!/home/ayaz/career_projects/SnakeGame/node_modules/postcss-loader/src/index.js??postcss!/home/ayaz/career_projects/SnakeGame/src/App.css","/home/ayaz/career_projects/SnakeGame/src/lib/utils.js","/home/ayaz/career_projects/SnakeGame/src/Board/Board.jsx","/home/ayaz/career_projects/SnakeGame/src/App.js","/home/ayaz/career_projects/SnakeGame/src/index.js"],"names":["randomIntFromInterval","min","max","Math","floor","random","useInterval","callback","delay","savedCallback","useRef","useEffect","current","tick","id","setInterval","clearInterval","reverseLinkedList","head","previousNode","currentNode","nextNode","next","LinkedListNode","value","LinkedList","node","tail","Direction","UP","RIGHT","DOWN","LEFT","Speed","BEGINNER","INTERMEDIATE","PRO","BOARD_SIZE","PROBABILITY_OF_DIRECTION_REVERSAL_FOOD","getStartingSnakeLLValue","board","rowSize","length","colSize","startingRow","round","startingCol","startingCell","row","col","cell","console","log","Board","useState","score","setScore","createBoard","setBoard","snake","setSnake","Set","snakeCells","setSnakeCells","speed","setSpeed","foodCell","setFoodCell","direction","setDirection","foodShouldReverseDirection","setFoodShouldReverseDirection","window","addEventListener","e","handleKeydown","moveSnake","newDirection","getDirectionFromKey","key","isValidDirection","snakeWillRunIntoItself","getOppositeDirection","size","currentHeadCoords","nextHeadCoords","getCoordsInDirection","isOutOfBounds","handleGameOver","nextHeadCell","has","newHead","currentHead","newSnakeCells","delete","add","foodConsumed","growSnake","reverseSnake","handleFoodConsumption","growthNodeCoords","getGrowthNodeCoords","newTailCell","newTail","currentTail","tailNextNodeDirection","getNextNodeDirection","snakeHead","maxPossibleCellValue","nextFoodCell","nextFoodShouldReverseDirection","snakeLLStartingValue","handleChange","target","float","paddingTop","map","rowIdx","cellValue","cellIdx","className","getCellClassName","counter","currentRow","push","coords","currentDirection","currentCol","nextRow","nextCol","snakeTail","growthDirection","currentTailCoords","App","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;;;;;AAAA,uC;;;;;;ACAA,uC;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEA;AACO,QAASA,sBAAT,CAA+BC,GAA/B,CAAoCC,GAApC,CAAyC,CAC9C;AACA,MAAOC,KAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAiBH,GAAG,CAAGD,GAAN,CAAY,CAA7B,EAAkCA,GAA7C,CAAP,CACD,CAED;AACO,QAASK,YAAT,CAAqBC,QAArB,CAA+BC,KAA/B,CAAsC,CAC3C,GAAMC,cAAa,CAAGC,uBAAM,EAA5B,CAEA;AACAC,0BAAS,CAAC,UAAM,CACdF,aAAa,CAACG,OAAd,CAAwBL,QAAxB,CACD,CAFQ,CAEN,CAACA,QAAD,CAFM,CAAT,CAIA;AACAI,0BAAS,CAAC,UAAM,CACd,QAASE,KAAT,EAAgB,CACdJ,aAAa,CAACG,OAAd,GACD,CACD,GAAIJ,KAAK,GAAK,IAAd,CAAoB,CAClB,GAAIM,GAAE,CAAGC,WAAW,CAACF,IAAD,CAAOL,KAAP,CAApB,CACA,MAAO,kBAAMQ,cAAa,CAACF,EAAD,CAAnB,EAAP,CACD,CACF,CARQ,CAQN,CAACN,KAAD,CARM,CAAT,CASD,CAEM,QAASS,kBAAT,CAA2BC,IAA3B,CAAiC,CACtC,GAAIC,aAAY,CAAG,IAAnB,CACA,GAAIC,YAAW,CAAGF,IAAlB,CACA,MAAOE,WAAW,GAAK,IAAvB,CAA6B,CAC3B,GAAMC,SAAQ,CAAGD,WAAW,CAACE,IAA7B,CACAF,WAAW,CAACE,IAAZ,CAAmBH,YAAnB,CACAA,YAAY,CAAGC,WAAf,CACAA,WAAW,CAAGC,QAAd,CACD,CACD,MAAOF,aAAP,CACD,C;;;;;;;;AC9BD;AACA;AACA;AACA;AACA;AACA,G,GAEMI,qB,CACJ,wBAAYC,KAAZ,CAAmB,CAAC,+DAClB,KAAKA,KAAL,CAAaA,KAAb,CACA,KAAKF,IAAL,CAAY,IAAZ,CACD,C,IAGGG,iB,CACJ,oBAAYD,KAAZ,CAAmB,CAAC,2DAClB,GAAME,KAAI,CAAG,GAAIH,qBAAJ,CAAmBC,KAAnB,CAAb,CACA,KAAKN,IAAL,CAAYQ,IAAZ,CACA,KAAKC,IAAL,CAAYD,IAAZ,CACD,C,CAGH,GAAME,UAAS,CAAG,CAChBC,EAAE,CAAE,IADY,CAEhBC,KAAK,CAAE,OAFS,CAGhBC,IAAI,CAAE,MAHU,CAIhBC,IAAI,CAAE,MAJU,CAAlB,CAOA,GAAMC,MAAK,CAAG,CACZC,QAAQ,CAAE,GADE,CAEZC,YAAY,CAAE,GAFF,CAGZC,GAAG,CAAE,EAHO,CAAd,CAMA,GAAMC,WAAU,CAAG,EAAnB,CACA,GAAMC,uCAAsC,CAAG,GAA/C,CAEA,GAAMC,wBAAuB,CAAG,QAA1BA,wBAA0B,CAAAC,KAAK,CAAI,CACvC,GAAMC,QAAO,CAAGD,KAAK,CAACE,MAAtB,CACA,GAAMC,QAAO,CAAGH,KAAK,CAAC,CAAD,CAAL,CAASE,MAAzB,CACA,GAAME,YAAW,CAAGzC,IAAI,CAAC0C,KAAL,CAAWJ,OAAO,CAAG,CAArB,CAApB,CACA,GAAMK,YAAW,CAAG3C,IAAI,CAAC0C,KAAL,CAAWF,OAAO,CAAG,CAArB,CAApB,CACA,GAAMI,aAAY,CAAGP,KAAK,CAACI,WAAD,CAAL,CAAmBE,WAAnB,CAArB,CAEA,MAAO,CACLE,GAAG,CAAEJ,WADA,CAELK,GAAG,CAAEH,WAFA,CAGLI,IAAI,CAAEH,YAHD,CAAP,CAKD,CAZD,CAcAI,OAAO,CAACC,GAAR,CAAY,OAAZ,EACA,GAAMC,kBAAK,CAAG,QAARA,MAAQ,EAAM,CAClBF,OAAO,CAACC,GAAR,CAAY,cAAZ,EADkB,cAEQE,yBAAQ,CAAC,CAAD,CAFhB,kEAEXC,KAFW,eAEJC,QAFI,8BAGQF,yBAAQ,CAACG,WAAW,CAACpB,UAAD,CAAZ,CAHhB,mEAGXG,KAHW,eAGJkB,QAHI,8BAIQJ,yBAAQ,CAChC,GAAI7B,iBAAJ,CAAec,uBAAuB,CAACC,KAAD,CAAtC,CADgC,CAJhB,mEAIXmB,KAJW,eAIJC,QAJI,8BAOkBN,yBAAQ,CAC1C,GAAIO,IAAJ,CAAQ,CAACF,KAAK,CAACzC,IAAN,CAAWM,KAAX,CAAiB0B,IAAlB,CAAR,CAD0C,CAP1B,mEAOXY,UAPW,eAOCC,aAPD,8BAUQT,yBAAQ,CAACrB,KAAK,CAACC,QAAP,CAVhB,oEAUX8B,KAVW,gBAUJC,QAVI,gBAYlB;AAZkB,gBAacX,yBAAQ,CAACK,KAAK,CAACzC,IAAN,CAAWM,KAAX,CAAiB0B,IAAjB,CAAwB,CAAzB,CAbtB,qEAaXgB,QAbW,gBAaDC,WAbC,gCAcgBb,yBAAQ,CAAC1B,SAAS,CAACE,KAAX,CAdxB,qEAcXsC,SAdW,gBAcAC,YAdA,gCAekDf,yBAAQ,CAC1E,KAD0E,CAf1D,qEAeXgB,0BAfW,gBAeiBC,6BAfjB,gBAoBlB5D,0BAAS,CAAC,UAAM,CACd6D,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAAmC,SAAAC,CAAC,CAAI,CACtCC,aAAa,CAACD,CAAD,CAAb,CACD,CAFD,EAGD,CAJQ,CAIN,EAJM,CAAT,CAKApE,WAAW,CAAC,UAAM,CAEhBsE,SAAS,GACV,CAHU,CAGRZ,KAHQ,CAAX,CAKA;AACA;AACA;AAEA,GAAMW,cAAa,CAAG,QAAhBA,cAAgB,CAAAD,CAAC,CAAI,CACzB,GAAMG,aAAY,CAAGC,mBAAmB,CAACJ,CAAC,CAACK,GAAH,CAAxC,CACA,GAAMC,iBAAgB,CAAGH,YAAY,GAAK,EAA1C,CACA,GAAI,CAACG,gBAAL,CAAuB,OACvB,GAAMC,uBAAsB,CAC1BC,oBAAoB,CAACL,YAAD,CAApB,GAAuCT,SAAvC,EAAoDN,UAAU,CAACqB,IAAX,CAAkB,CADxE,CAEA;AACA;AACA;AACA;AACA,GAAIF,sBAAJ,CAA4B,OAC5BZ,YAAY,CAACQ,YAAD,CAAZ,CACD,CAZD,CAcA,GAAMD,UAAS,CAAG,QAAZA,UAAY,EAAM,CACtB,GAAMQ,kBAAiB,CAAG,CACxBpC,GAAG,CAAEW,KAAK,CAACzC,IAAN,CAAWM,KAAX,CAAiBwB,GADE,CAExBC,GAAG,CAAEU,KAAK,CAACzC,IAAN,CAAWM,KAAX,CAAiByB,GAFE,CAA1B,CAKA,GAAMoC,eAAc,CAAGC,oBAAoB,CAACF,iBAAD,CAAoBhB,SAApB,CAA3C,CACA,GAAImB,aAAa,CAACF,cAAD,CAAiB7C,KAAjB,CAAjB,CAA0C,CACxCgD,cAAc,GACd,OACD,CACD,GAAMC,aAAY,CAAGjD,KAAK,CAAC6C,cAAc,CAACrC,GAAhB,CAAL,CAA0BqC,cAAc,CAACpC,GAAzC,CAArB,CACA,GAAIa,UAAU,CAAC4B,GAAX,CAAeD,YAAf,CAAJ,CAAkC,CAChCD,cAAc,GACd,OACD,CAED,GAAMG,QAAO,CAAG,GAAIpE,qBAAJ,CAAmB,CACjCyB,GAAG,CAAEqC,cAAc,CAACrC,GADa,CAEjCC,GAAG,CAAEoC,cAAc,CAACpC,GAFa,CAGjCC,IAAI,CAAEuC,YAH2B,CAAnB,CAAhB,CAKA,GAAMG,YAAW,CAAGjC,KAAK,CAACzC,IAA1B,CACAyC,KAAK,CAACzC,IAAN,CAAayE,OAAb,CACAC,WAAW,CAACtE,IAAZ,CAAmBqE,OAAnB,CAEA,GAAME,cAAa,CAAG,GAAIhC,IAAJ,CAAQC,UAAR,CAAtB,CACA+B,aAAa,CAACC,MAAd,CAAqBnC,KAAK,CAAChC,IAAN,CAAWH,KAAX,CAAiB0B,IAAtC,EACA2C,aAAa,CAACE,GAAd,CAAkBN,YAAlB,EAEA9B,KAAK,CAAChC,IAAN,CAAagC,KAAK,CAAChC,IAAN,CAAWL,IAAxB,CACA,GAAIqC,KAAK,CAAChC,IAAN,GAAe,IAAnB,CAAyBgC,KAAK,CAAChC,IAAN,CAAagC,KAAK,CAACzC,IAAnB,CAEzB,GAAM8E,aAAY,CAAGP,YAAY,GAAKvB,QAAtC,CACA,GAAI8B,YAAJ,CAAkB,CAChB;AACAC,SAAS,CAACJ,aAAD,CAAT,CACA,GAAIvB,0BAAJ,CAAgC4B,YAAY,GAC5CC,qBAAqB,CAACN,aAAD,CAArB,CACD,CAED9B,aAAa,CAAC8B,aAAD,CAAb,CACD,CA1CD,CA4CA;AACA,GAAMI,UAAS,CAAG,QAAZA,UAAY,CAAAJ,aAAa,CAAI,CACjC,GAAMO,iBAAgB,CAAGC,mBAAmB,CAAC1C,KAAK,CAAChC,IAAP,CAAayC,SAAb,CAA5C,CACA,GAAImB,aAAa,CAACa,gBAAD,CAAmB5D,KAAnB,CAAjB,CAA4C,CAC1C;AACA,OACD,CACD,GAAM8D,YAAW,CAAG9D,KAAK,CAAC4D,gBAAgB,CAACpD,GAAlB,CAAL,CAA4BoD,gBAAgB,CAACnD,GAA7C,CAApB,CACA,GAAMsD,QAAO,CAAG,GAAIhF,qBAAJ,CAAmB,CACjCyB,GAAG,CAAEoD,gBAAgB,CAACpD,GADW,CAEjCC,GAAG,CAAEmD,gBAAgB,CAACnD,GAFW,CAGjCC,IAAI,CAAEoD,WAH2B,CAAnB,CAAhB,CAKA,GAAME,YAAW,CAAG7C,KAAK,CAAChC,IAA1B,CACAgC,KAAK,CAAChC,IAAN,CAAa4E,OAAb,CACA5C,KAAK,CAAChC,IAAN,CAAWL,IAAX,CAAkBkF,WAAlB,CAEAX,aAAa,CAACE,GAAd,CAAkBO,WAAlB,EACD,CAjBD,CAmBA,GAAMJ,aAAY,CAAG,QAAfA,aAAe,EAAM,CACzB,GAAMO,sBAAqB,CAAGC,oBAAoB,CAAC/C,KAAK,CAAChC,IAAP,CAAayC,SAAb,CAAlD,CACA,GAAMS,aAAY,CAAGK,oBAAoB,CAACuB,qBAAD,CAAzC,CACApC,YAAY,CAACQ,YAAD,CAAZ,CAEA;AACA;AACA5D,iBAAiB,CAAC0C,KAAK,CAAChC,IAAP,CAAjB,CACA,GAAMgF,UAAS,CAAGhD,KAAK,CAACzC,IAAxB,CACAyC,KAAK,CAACzC,IAAN,CAAayC,KAAK,CAAChC,IAAnB,CACAgC,KAAK,CAAChC,IAAN,CAAagF,SAAb,CACD,CAXD,CAaA,GAAMR,sBAAqB,CAAG,QAAxBA,sBAAwB,CAAAN,aAAa,CAAI,CAC7C,GAAMe,qBAAoB,CAAGvE,UAAU,CAAGA,UAA1C,CACA,GAAIwE,aAAJ,CACA;AACA;AACA;AACA;AACA,MAAO,IAAP,CAAa,CACXA,YAAY,CAAG7G,qBAAqB,CAAC,CAAD,CAAI4G,oBAAJ,CAApC,CACA,GAAIf,aAAa,CAACH,GAAd,CAAkBmB,YAAlB,GAAmC3C,QAAQ,GAAK2C,YAApD,CACE,SACF,MACD,CAED,GAAMC,+BAA8B,CAClC3G,IAAI,CAACE,MAAL,GAAgBiC,sCADlB,CAGA6B,WAAW,CAAC0C,YAAD,CAAX,CACAtC,6BAA6B,CAACuC,8BAAD,CAA7B,CACAtD,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAR,CACD,CApBD,CAsBA,GAAMiC,eAAc,CAAG,QAAjBA,eAAiB,EAAM,CAC3BhC,QAAQ,CAAC,CAAD,CAAR,CACA,GAAMuD,qBAAoB,CAAGxE,uBAAuB,CAACC,KAAD,CAApD,CACAoB,QAAQ,CAAC,GAAInC,iBAAJ,CAAesF,oBAAf,CAAD,CAAR,CACA5C,WAAW,CAAC4C,oBAAoB,CAAC7D,IAArB,CAA4B,CAA7B,CAAX,CACAa,aAAa,CAAC,GAAIF,IAAJ,CAAQ,CAACkD,oBAAoB,CAAC7D,IAAtB,CAAR,CAAD,CAAb,CACAmB,YAAY,CAACzC,SAAS,CAACE,KAAX,CAAZ,CACD,CAPD,CAQA,GAAMkF,aAAY,CAAG,QAAfA,aAAe,CAACtC,CAAD,CAAO,CAC1B,GAAIlD,MAAK,CAAGkD,CAAC,CAACuC,MAAF,CAASzF,KAArB,CACA,GAAIA,KAAK,GAAK,UAAd,CAA0B,CACxByC,QAAQ,CAAChC,KAAK,CAACC,QAAP,CAAR,CAED,CAHD,IAIK,IAAIV,KAAK,GAAK,cAAd,CAA8B,CACjCyC,QAAQ,CAAChC,KAAK,CAACE,YAAP,CAAR,CACD,CAFI,IAGA,CACH8B,QAAQ,CAAChC,KAAK,CAACG,GAAP,CAAR,CACD,CAEF,CAbD,CAcA,mBACE,4EACE,0DACE,iCAAI,KAAK,CAAE,CAAE8E,KAAK,CAAE,KAAT,CAAX,4BADF,cAEE,kCAAK,KAAK,CAAE,CAAEA,KAAK,CAAE,QAAT,CAAZ,uBACE,sCAAQ,SAAS,CAAC,OAAlB,CACE,QAAQ,CAAE,kBAACxC,CAAD,QAAOsC,aAAY,CAACtC,CAAD,CAAnB,EADZ,CACoC,QAAQ,CAAE,KAD9C,wBAEE,qCAAQ,SAAS,CAAC,OAAlB,CAA0B,KAAK,CAAC,UAAhC,sBAFF,cAGE,qCAAQ,SAAS,CAAC,OAAlB,CAA0B,KAAK,CAAC,cAAhC,0BAHF,cAIE,qCAAQ,SAAS,CAAC,OAAlB,CAA0B,KAAK,CAAC,KAAhC,iBAJF,GADF,EAFF,GADF,cAYE,mCAAK,KAAK,CAAE,CAAEyC,UAAU,CAAE,MAAd,CAAZ,wBACE,qCAAQ,SAAS,CAAC,OAAlB,mBADF,cAEE,qCAAQ,SAAS,CAAC,MAAlB,CAAyB,OAAO,CAAE,yBAAM3B,eAAc,EAApB,EAAlC,kBAFF,GAZF,cAgBE,sDAAYjC,KAAZ,GAhBF,cAiBE,kCAAK,SAAS,CAAC,OAAf,UACGf,KAAK,CAAC4E,GAAN,CAAU,SAACpE,GAAD,CAAMqE,MAAN,qBACT,kCAAkB,SAAS,CAAC,KAA5B,UACGrE,GAAG,CAACoE,GAAJ,CAAQ,SAACE,SAAD,CAAYC,OAAZ,CAAwB,CAC/B,GAAMC,UAAS,CAAGC,gBAAgB,CAChCH,SADgC,CAEhCpD,QAFgC,CAGhCI,0BAHgC,CAIhCR,UAJgC,CAAlC,CAMA,mBAAO,kCAAmB,SAAS,CAAE0D,SAA9B,EAAUD,OAAV,CAAP,CACD,CARA,CADH,EAAUF,MAAV,CADS,EAAV,CADH,EAjBF,GADF,CAmCD,CA5MD,CA8MA,GAAM5D,YAAW,CAAG,QAAdA,YAAc,CAAApB,UAAU,CAAI,CAChC,GAAIqF,QAAO,CAAG,CAAd,CACA,GAAMlF,MAAK,CAAG,EAAd,CACA,IAAK,GAAIQ,IAAG,CAAG,CAAf,CAAkBA,GAAG,CAAGX,UAAxB,CAAoCW,GAAG,EAAvC,CAA2C,CACzC,GAAM2E,WAAU,CAAG,EAAnB,CACA,IAAK,GAAI1E,IAAG,CAAG,CAAf,CAAkBA,GAAG,CAAGZ,UAAxB,CAAoCY,GAAG,EAAvC,CAA2C,CACzC0E,UAAU,CAACC,IAAX,CAAgBF,OAAO,EAAvB,EACD,CACDlF,KAAK,CAACoF,IAAN,CAAWD,UAAX,EACD,CACD,MAAOnF,MAAP,CACD,CAXD,CAaA,GAAM8C,qBAAoB,CAAG,QAAvBA,qBAAuB,CAACuC,MAAD,CAASzD,SAAT,CAAuB,CAClD,GAAIA,SAAS,GAAKxC,SAAS,CAACC,EAA5B,CAAgC,CAC9B,MAAO,CACLmB,GAAG,CAAE6E,MAAM,CAAC7E,GAAP,CAAa,CADb,CAELC,GAAG,CAAE4E,MAAM,CAAC5E,GAFP,CAAP,CAID,CACD,GAAImB,SAAS,GAAKxC,SAAS,CAACE,KAA5B,CAAmC,CACjC,MAAO,CACLkB,GAAG,CAAE6E,MAAM,CAAC7E,GADP,CAELC,GAAG,CAAE4E,MAAM,CAAC5E,GAAP,CAAa,CAFb,CAAP,CAID,CACD,GAAImB,SAAS,GAAKxC,SAAS,CAACG,IAA5B,CAAkC,CAChC,MAAO,CACLiB,GAAG,CAAE6E,MAAM,CAAC7E,GAAP,CAAa,CADb,CAELC,GAAG,CAAE4E,MAAM,CAAC5E,GAFP,CAAP,CAID,CACD,GAAImB,SAAS,GAAKxC,SAAS,CAACI,IAA5B,CAAkC,CAChC,MAAO,CACLgB,GAAG,CAAE6E,MAAM,CAAC7E,GADP,CAELC,GAAG,CAAE4E,MAAM,CAAC5E,GAAP,CAAa,CAFb,CAAP,CAID,CACF,CAzBD,CA2BA,GAAMsC,cAAa,CAAG,QAAhBA,cAAgB,CAACsC,MAAD,CAASrF,KAAT,CAAmB,IAC/BQ,IAD+B,CAClB6E,MADkB,CAC/B7E,GAD+B,CAC1BC,GAD0B,CAClB4E,MADkB,CAC1B5E,GAD0B,CAEvC,GAAID,GAAG,CAAG,CAAN,EAAWC,GAAG,CAAG,CAArB,CAAwB,MAAO,KAAP,CACxB,GAAID,GAAG,EAAIR,KAAK,CAACE,MAAb,EAAuBO,GAAG,EAAIT,KAAK,CAAC,CAAD,CAAL,CAASE,MAA3C,CAAmD,MAAO,KAAP,CACnD,MAAO,MAAP,CACD,CALD,CAOA,GAAMoC,oBAAmB,CAAG,QAAtBA,oBAAsB,CAAAC,GAAG,CAAI,CACjC,GAAIA,GAAG,GAAK,SAAZ,CAAuB,MAAOnD,UAAS,CAACC,EAAjB,CACvB,GAAIkD,GAAG,GAAK,YAAZ,CAA0B,MAAOnD,UAAS,CAACE,KAAjB,CAC1B,GAAIiD,GAAG,GAAK,WAAZ,CAAyB,MAAOnD,UAAS,CAACG,IAAjB,CACzB,GAAIgD,GAAG,GAAK,WAAZ,CAAyB,MAAOnD,UAAS,CAACI,IAAjB,CACzB,MAAO,EAAP,CACD,CAND,CAQA,GAAM0E,qBAAoB,CAAG,QAAvBA,qBAAuB,CAAChF,IAAD,CAAOoG,gBAAP,CAA4B,CACvD,GAAIpG,IAAI,CAACJ,IAAL,GAAc,IAAlB,CAAwB,MAAOwG,iBAAP,CAD+B,gBAEVpG,IAAI,CAACF,KAFK,CAE1CmG,UAF0C,aAE/C3E,GAF+C,CAEzB+E,UAFyB,aAE9B9E,GAF8B,sBAGhBvB,IAAI,CAACJ,IAAL,CAAUE,KAHM,CAG1CwG,OAH0C,kBAG/ChF,GAH+C,CAG5BiF,OAH4B,kBAGjChF,GAHiC,CAIvD,GAAI+E,OAAO,GAAKL,UAAZ,EAA0BM,OAAO,GAAKF,UAAU,CAAG,CAAvD,CAA0D,CACxD,MAAOnG,UAAS,CAACE,KAAjB,CACD,CACD,GAAIkG,OAAO,GAAKL,UAAZ,EAA0BM,OAAO,GAAKF,UAAU,CAAG,CAAvD,CAA0D,CACxD,MAAOnG,UAAS,CAACI,IAAjB,CACD,CACD,GAAIiG,OAAO,GAAKF,UAAZ,EAA0BC,OAAO,GAAKL,UAAU,CAAG,CAAvD,CAA0D,CACxD,MAAO/F,UAAS,CAACG,IAAjB,CACD,CACD,GAAIkG,OAAO,GAAKF,UAAZ,EAA0BC,OAAO,GAAKL,UAAU,CAAG,CAAvD,CAA0D,CACxD,MAAO/F,UAAS,CAACC,EAAjB,CACD,CACD,MAAO,EAAP,CACD,CAjBD,CAmBA,GAAMwE,oBAAmB,CAAG,QAAtBA,oBAAsB,CAAC6B,SAAD,CAAYJ,gBAAZ,CAAiC,CAC3D,GAAMrB,sBAAqB,CAAGC,oBAAoB,CAChDwB,SADgD,CAEhDJ,gBAFgD,CAAlD,CAIA,GAAMK,gBAAe,CAAGjD,oBAAoB,CAACuB,qBAAD,CAA5C,CACA,GAAM2B,kBAAiB,CAAG,CACxBpF,GAAG,CAAEkF,SAAS,CAAC1G,KAAV,CAAgBwB,GADG,CAExBC,GAAG,CAAEiF,SAAS,CAAC1G,KAAV,CAAgByB,GAFG,CAA1B,CAIA,GAAMmD,iBAAgB,CAAGd,oBAAoB,CAC3C8C,iBAD2C,CAE3CD,eAF2C,CAA7C,CAIA,MAAO/B,iBAAP,CACD,CAfD,CAiBA,GAAMlB,qBAAoB,CAAG,QAAvBA,qBAAuB,CAAAd,SAAS,CAAI,CACxC,GAAIA,SAAS,GAAKxC,SAAS,CAACC,EAA5B,CAAgC,MAAOD,UAAS,CAACG,IAAjB,CAChC,GAAIqC,SAAS,GAAKxC,SAAS,CAACE,KAA5B,CAAmC,MAAOF,UAAS,CAACI,IAAjB,CACnC,GAAIoC,SAAS,GAAKxC,SAAS,CAACG,IAA5B,CAAkC,MAAOH,UAAS,CAACC,EAAjB,CAClC,GAAIuC,SAAS,GAAKxC,SAAS,CAACI,IAA5B,CAAkC,MAAOJ,UAAS,CAACE,KAAjB,CACnC,CALD,CAOA,GAAM2F,iBAAgB,CAAG,QAAnBA,iBAAmB,CACvBH,SADuB,CAEvBpD,QAFuB,CAGvBI,0BAHuB,CAIvBR,UAJuB,CAKpB,CACH,GAAI0D,UAAS,CAAG,MAAhB,CACA,GAAIF,SAAS,GAAKpD,QAAlB,CAA4B,CAC1B,GAAII,0BAAJ,CAAgC,CAC9BkD,SAAS,CAAG,kBAAZ,CACD,CAFD,IAEO,CACLA,SAAS,CAAG,eAAZ,CACD,CACF,CACD,GAAI1D,UAAU,CAAC4B,GAAX,CAAe4B,SAAf,CAAJ,CAA+BE,SAAS,CAAG,iBAAZ,CAE/B,MAAOA,UAAP,CACD,CAjBD,CAmBenE,qEAAf,E;;;;;AC7XA,GAAMgF,QAAG,CAAG,QAANA,IAAM,sBACV,kCAAK,SAAS,CAAC,KAAf,uBAEE,2BAAC,eAAD,IAFF,EADU,EAAZ,CAOeA,qDAAf,E;;ACNAC,mBAAQ,CAACC,MAAT,cACE,2BAAC,eAAD,CAAO,UAAP,wBACE,2BAAC,SAAD,IADF,EADF,CAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E","file":"x","sourcesContent":["// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import {useEffect, useRef} from 'react';\n\n// Copied from https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nexport function randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n// Copied from https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport function reverseLinkedList(head) {\n  let previousNode = null;\n  let currentNode = head;\n  while (currentNode !== null) {\n    const nextNode = currentNode.next;\n    currentNode.next = previousNode;\n    previousNode = currentNode;\n    currentNode = nextNode;\n  }\n  return previousNode;\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  randomIntFromInterval,\n  reverseLinkedList,\n  useInterval,\n} from '../lib/utils.js';\n\nimport './Board.css';\n\n/**\n * TODO: add a more elegant UX for before a game starts and after a game ends.\n * A game probably shouldn't start until the user presses an arrow key, and\n * once a game is over, the board state should likely freeze until the user\n * intentionally restarts the game.\n */\n\nclass LinkedListNode {\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n  }\n}\n\nclass LinkedList {\n  constructor(value) {\n    const node = new LinkedListNode(value);\n    this.head = node;\n    this.tail = node;\n  }\n}\n\nconst Direction = {\n  UP: 'UP',\n  RIGHT: 'RIGHT',\n  DOWN: 'DOWN',\n  LEFT: 'LEFT',\n};\n\nconst Speed = {\n  BEGINNER: 200,\n  INTERMEDIATE: 150,\n  PRO: 90\n};\n\nconst BOARD_SIZE = 15;\nconst PROBABILITY_OF_DIRECTION_REVERSAL_FOOD = 0.2;\n\nconst getStartingSnakeLLValue = board => {\n  const rowSize = board.length;\n  const colSize = board[0].length;\n  const startingRow = Math.round(rowSize / 3);\n  const startingCol = Math.round(colSize / 3);\n  const startingCell = board[startingRow][startingCol];\n\n  return {\n    row: startingRow,\n    col: startingCol,\n    cell: startingCell,\n  };\n};\n\nconsole.log(\"hello\");\nconst Board = () => {\n  console.log(\"inside Board\")\n  const [score, setScore] = useState(0);\n  const [board, setBoard] = useState(createBoard(BOARD_SIZE));\n  const [snake, setSnake] = useState(\n    new LinkedList(getStartingSnakeLLValue(board)),\n  );\n  const [snakeCells, setSnakeCells] = useState(\n    new Set([snake.head.value.cell]),\n  );\n  const [speed, setSpeed] = useState(Speed.BEGINNER);\n\n  // Naively set the starting food cell 5 cells away from the starting snake cell.\n  const [foodCell, setFoodCell] = useState(snake.head.value.cell + 5);\n  const [direction, setDirection] = useState(Direction.RIGHT);\n  const [foodShouldReverseDirection, setFoodShouldReverseDirection] = useState(\n    false,\n  );\n  \n\n  useEffect(() => {\n    window.addEventListener('keydown', e => {\n      handleKeydown(e);\n    });\n  }, []);\n  useInterval(() => {\n\n    moveSnake();\n  }, speed);\n\n  // `useInterval` is needed; you can't naively do `setInterval` in the\n  // `useEffect` above. See the article linked above the `useInterval`\n  // definition for details.\n\n  const handleKeydown = e => {\n    const newDirection = getDirectionFromKey(e.key);\n    const isValidDirection = newDirection !== '';\n    if (!isValidDirection) return;\n    const snakeWillRunIntoItself =\n      getOppositeDirection(newDirection) === direction && snakeCells.size > 1;\n    // Note: this functionality is currently broken, for the same reason that\n    // `useInterval` is needed. Specifically, the `direction` and `snakeCells`\n    // will currently never reflect their \"latest version\" when `handleKeydown`\n    // is called. I leave it as an exercise to the viewer to fix this :P\n    if (snakeWillRunIntoItself) return;\n    setDirection(newDirection);\n  };\n\n  const moveSnake = () => {\n    const currentHeadCoords = {\n      row: snake.head.value.row,\n      col: snake.head.value.col,\n    };\n\n    const nextHeadCoords = getCoordsInDirection(currentHeadCoords, direction);\n    if (isOutOfBounds(nextHeadCoords, board)) {\n      handleGameOver();\n      return;\n    }\n    const nextHeadCell = board[nextHeadCoords.row][nextHeadCoords.col];\n    if (snakeCells.has(nextHeadCell)) {\n      handleGameOver();\n      return;\n    }\n\n    const newHead = new LinkedListNode({\n      row: nextHeadCoords.row,\n      col: nextHeadCoords.col,\n      cell: nextHeadCell,\n    });\n    const currentHead = snake.head;\n    snake.head = newHead;\n    currentHead.next = newHead;\n\n    const newSnakeCells = new Set(snakeCells);\n    newSnakeCells.delete(snake.tail.value.cell);\n    newSnakeCells.add(nextHeadCell);\n\n    snake.tail = snake.tail.next;\n    if (snake.tail === null) snake.tail = snake.head;\n\n    const foodConsumed = nextHeadCell === foodCell;\n    if (foodConsumed) {\n      // This function mutates newSnakeCells.\n      growSnake(newSnakeCells);\n      if (foodShouldReverseDirection) reverseSnake();\n      handleFoodConsumption(newSnakeCells);\n    }\n\n    setSnakeCells(newSnakeCells);\n  };\n\n  // This function mutates newSnakeCells.\n  const growSnake = newSnakeCells => {\n    const growthNodeCoords = getGrowthNodeCoords(snake.tail, direction);\n    if (isOutOfBounds(growthNodeCoords, board)) {\n      // Snake is positioned such that it can't grow; don't do anything.\n      return;\n    }\n    const newTailCell = board[growthNodeCoords.row][growthNodeCoords.col];\n    const newTail = new LinkedListNode({\n      row: growthNodeCoords.row,\n      col: growthNodeCoords.col,\n      cell: newTailCell,\n    });\n    const currentTail = snake.tail;\n    snake.tail = newTail;\n    snake.tail.next = currentTail;\n\n    newSnakeCells.add(newTailCell);\n  };\n\n  const reverseSnake = () => {\n    const tailNextNodeDirection = getNextNodeDirection(snake.tail, direction);\n    const newDirection = getOppositeDirection(tailNextNodeDirection);\n    setDirection(newDirection);\n\n    // The tail of the snake is really the head of the linked list, which\n    // is why we have to pass the snake's tail to `reverseLinkedList`.\n    reverseLinkedList(snake.tail);\n    const snakeHead = snake.head;\n    snake.head = snake.tail;\n    snake.tail = snakeHead;\n  };\n\n  const handleFoodConsumption = newSnakeCells => {\n    const maxPossibleCellValue = BOARD_SIZE * BOARD_SIZE;\n    let nextFoodCell;\n    // In practice, this will never be a time-consuming operation. Even\n    // in the extreme scenario where a snake is so big that it takes up 90%\n    // of the board (nearly impossible), there would be a 10% chance of generating\n    // a valid new food cell--so an average of 10 operations: trivial.\n    while (true) {\n      nextFoodCell = randomIntFromInterval(1, maxPossibleCellValue);\n      if (newSnakeCells.has(nextFoodCell) || foodCell === nextFoodCell)\n        continue;\n      break;\n    }\n\n    const nextFoodShouldReverseDirection =\n      Math.random() < PROBABILITY_OF_DIRECTION_REVERSAL_FOOD;\n\n    setFoodCell(nextFoodCell);\n    setFoodShouldReverseDirection(nextFoodShouldReverseDirection);\n    setScore(score + 1);\n  };\n\n  const handleGameOver = () => {\n    setScore(0);\n    const snakeLLStartingValue = getStartingSnakeLLValue(board);\n    setSnake(new LinkedList(snakeLLStartingValue));\n    setFoodCell(snakeLLStartingValue.cell + 5);\n    setSnakeCells(new Set([snakeLLStartingValue.cell]));\n    setDirection(Direction.RIGHT);\n  };\n  const handleChange = (e) => {\n    let value = e.target.value;\n    if (value === \"BEGINNER\") {\n      setSpeed(Speed.BEGINNER);\n\n    }\n    else if (value === \"INTERMEDIATE\") {\n      setSpeed(Speed.INTERMEDIATE)\n    }\n    else {\n      setSpeed(Speed.PRO)\n    }\n\n  };\n  return (\n    <>\n      <div>\n        <h3 style={{ float: \"top\" }}>Choose level :</h3>\n        <div style={{ float: \"center\" }} >\n          <select className=\"level\"\n            onChange={(e) => handleChange(e)} disabled={false}>\n            <option className=\"value\" value=\"BEGINNER\">Beginner</option>\n            <option className=\"value\" value=\"INTERMEDIATE\">Intermediate</option>\n            <option className=\"value\" value=\"PRO\">Pro</option>\n          </select>\n        </div>\n      </div>\n      <div style={{ paddingTop: \"10px\" }}>\n        <button className=\"start\" >START</button>\n        <button className=\"stop\" onClick={() => handleGameOver()} >STOP</button>\n      </div>\n      <h2>Score: {score}</h2>\n      <div className=\"board\">\n        {board.map((row, rowIdx) => (\n          <div key={rowIdx} className=\"row\">\n            {row.map((cellValue, cellIdx) => {\n              const className = getCellClassName(\n                cellValue,\n                foodCell,\n                foodShouldReverseDirection,\n                snakeCells,\n              );\n              return <div key={cellIdx} className={className}></div>;\n            })}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nconst createBoard = BOARD_SIZE => {\n  let counter = 1;\n  const board = [];\n  for (let row = 0; row < BOARD_SIZE; row++) {\n    const currentRow = [];\n    for (let col = 0; col < BOARD_SIZE; col++) {\n      currentRow.push(counter++);\n    }\n    board.push(currentRow);\n  }\n  return board;\n};\n\nconst getCoordsInDirection = (coords, direction) => {\n  if (direction === Direction.UP) {\n    return {\n      row: coords.row - 1,\n      col: coords.col,\n    };\n  }\n  if (direction === Direction.RIGHT) {\n    return {\n      row: coords.row,\n      col: coords.col + 1,\n    };\n  }\n  if (direction === Direction.DOWN) {\n    return {\n      row: coords.row + 1,\n      col: coords.col,\n    };\n  }\n  if (direction === Direction.LEFT) {\n    return {\n      row: coords.row,\n      col: coords.col - 1,\n    };\n  }\n};\n\nconst isOutOfBounds = (coords, board) => {\n  const { row, col } = coords;\n  if (row < 0 || col < 0) return true;\n  if (row >= board.length || col >= board[0].length) return true;\n  return false;\n};\n\nconst getDirectionFromKey = key => {\n  if (key === 'ArrowUp') return Direction.UP;\n  if (key === 'ArrowRight') return Direction.RIGHT;\n  if (key === 'ArrowDown') return Direction.DOWN;\n  if (key === 'ArrowLeft') return Direction.LEFT;\n  return '';\n};\n\nconst getNextNodeDirection = (node, currentDirection) => {\n  if (node.next === null) return currentDirection;\n  const { row: currentRow, col: currentCol } = node.value;\n  const { row: nextRow, col: nextCol } = node.next.value;\n  if (nextRow === currentRow && nextCol === currentCol + 1) {\n    return Direction.RIGHT;\n  }\n  if (nextRow === currentRow && nextCol === currentCol - 1) {\n    return Direction.LEFT;\n  }\n  if (nextCol === currentCol && nextRow === currentRow + 1) {\n    return Direction.DOWN;\n  }\n  if (nextCol === currentCol && nextRow === currentRow - 1) {\n    return Direction.UP;\n  }\n  return '';\n};\n\nconst getGrowthNodeCoords = (snakeTail, currentDirection) => {\n  const tailNextNodeDirection = getNextNodeDirection(\n    snakeTail,\n    currentDirection,\n  );\n  const growthDirection = getOppositeDirection(tailNextNodeDirection);\n  const currentTailCoords = {\n    row: snakeTail.value.row,\n    col: snakeTail.value.col,\n  };\n  const growthNodeCoords = getCoordsInDirection(\n    currentTailCoords,\n    growthDirection,\n  );\n  return growthNodeCoords;\n};\n\nconst getOppositeDirection = direction => {\n  if (direction === Direction.UP) return Direction.DOWN;\n  if (direction === Direction.RIGHT) return Direction.LEFT;\n  if (direction === Direction.DOWN) return Direction.UP;\n  if (direction === Direction.LEFT) return Direction.RIGHT;\n};\n\nconst getCellClassName = (\n  cellValue,\n  foodCell,\n  foodShouldReverseDirection,\n  snakeCells,\n) => {\n  let className = 'cell';\n  if (cellValue === foodCell) {\n    if (foodShouldReverseDirection) {\n      className = 'cell cell-purple';\n    } else {\n      className = 'cell cell-red';\n    }\n  }\n  if (snakeCells.has(cellValue)) className = 'cell cell-green';\n\n  return className;\n};\n\nexport default Board;\n","import Board from './Board/Board.jsx';\n\nimport './App.css';\n\nconst App = () => (\n  <div className=\"App\">\n    \n    <Board></Board>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"]}}